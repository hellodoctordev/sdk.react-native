Object.defineProperty(exports,"__esModule",{value:true});exports.connect=connect;exports.disconnect=disconnect;exports.displayIncomingCallNotification=displayIncomingCallNotification;exports.flipCamera=flipCamera;exports.getRemoteParticipantIdentities=getRemoteParticipantIdentities;exports.isConnectedToRoom=isConnectedToRoom;exports.setLocalAudioEnabled=setLocalAudioEnabled;exports.setLocalVideoEnabled=setLocalVideoEnabled;exports.setLocalVideoPublished=setLocalVideoPublished;exports.setSpeakerEnabled=setSpeakerEnabled;exports.startLocalCapture=startLocalCapture;exports.stopLocalCapture=stopLocalCapture;var _reactNative=require("react-native");var RNHelloDoctorModule=_reactNative.NativeModules.RNHelloDoctorModule;function displayIncomingCallNotification(videoRoomSID,callerDisplayName,callerPhotoURL){return RNHelloDoctorModule.displayIncomingCallNotification(videoRoomSID,callerDisplayName,callerPhotoURL);}function connect(videoRoomSID,accessToken){return RNHelloDoctorModule.connect(videoRoomSID,accessToken);}function isConnectedToRoom(videoRoomSID){return RNHelloDoctorModule.isConnectedToRoom(videoRoomSID).then(function(isConnected){console.debug("got response: ("+isConnected+")");return isConnected==1||isConnected===true;});}function getRemoteParticipantIdentities(){return RNHelloDoctorModule.getRemoteParticipantIdentities();}function disconnect(){return RNHelloDoctorModule.disconnect();}function startLocalCapture(){return RNHelloDoctorModule.startLocalCapture();}function stopLocalCapture(){return RNHelloDoctorModule.stopLocalCapture();}function setLocalVideoPublished(published){return RNHelloDoctorModule.setVideoPublished(published);}function setLocalVideoEnabled(enabled){return RNHelloDoctorModule.setVideoEnabled(enabled);}function setLocalAudioEnabled(enabled){return RNHelloDoctorModule.setAudioEnabled(enabled);}function setSpeakerEnabled(enabled){return RNHelloDoctorModule.setSpeakerPhone(enabled);}function flipCamera(){return RNHelloDoctorModule.flipCamera();}